import java.sql.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class WaitingList extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    String a = SignIn.un;
    String b;
    
    /**
     * Creates new form WaitingList
     */
    public WaitingList() {
        initComponents();
        setLocation(340, 100);
        setResizable(false);
        show_wait();
        
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/group_11", "root", "");
            String query1="select ROLE from user where USERNAME='"+a+"'";
            ps = con.prepareStatement(query1);
            rs = ps.executeQuery(query1);
            //jLabel2.setText(a);
//            jc1.removeAllItems();
            while(rs.next())
            {
                b = rs.getString("ROLE");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public ArrayList<Wait> WaitList(){    
        ArrayList<Wait> WaitList = new ArrayList<>();
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/group_11", "root", "");
            String query4 = "select Booking_ID, Excursion_Name, Port_ID, Booked_Date, No_of_Seats, Booking_Status, Booked_By from booking_info where Booking_Status='Wait Listed'";
            //ps = con.prepareStatement(query4);
            Statement st = con.createStatement();
            rs = st.executeQuery(query4);
            Wait asd;
            while(rs.next())
            {
                asd = new Wait(rs.getInt("Booking_ID"), rs.getString("Excursion_Name"), rs.getString("Port_ID"), rs.getString("Booked_Date"), rs.getInt("No_of_Seats"), rs.getString("Booking_Status"), rs.getString("Booked_By"));
                WaitList.add(asd);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return WaitList;
    }
    
    public final void show_wait(){
        ArrayList<Wait> list = WaitList();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] row = new Object[7];
        for(int i=0; i<list.size(); i++){
            row[0] = list.get(i).getBooking_ID();
            row[1] = list.get(i).getExcursion_Name();
            row[2] = list.get(i).getPort_ID();
            row[3] = list.get(i).getBooked_Date();
            row[4] = list.get(i).getNo_of_Seats();
            row[5] = list.get(i).getBooking_Status();
            row[6] = list.get(i).getBooked_By();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cruise Excursion Booking System");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Excursion Name", "Port ID", "Booked Date", "No. of Seats", "Booking Status", "Booked By"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if(b.equals("Admin"))
        {    
            AdminHome Ah = new AdminHome();
            Ah.setVisible(true);
            dispose();
        }
        else
        {
            CustomerHome Ch = new CustomerHome();
            Ch.setVisible(true);
            dispose();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WaitingList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WaitingList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WaitingList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WaitingList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WaitingList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    private static class Wait {
        private int Booking_ID, No_of_Seats;
        private String Excursion_Name, Booked_Date, Port_ID, Booking_Status, Booked_By;
        
        public Wait(int Booking_ID, String Excursion_Name, String Port_ID, String Booked_Date, int No_of_Seats, String Booking_Status, String Booked_By) {
            this.Booking_ID = Booking_ID;
            this.Excursion_Name = Excursion_Name;
            this.Port_ID = Port_ID;
            this.Booked_Date = Booked_Date;
            this.No_of_Seats = No_of_Seats;
            this.Booking_Status = Booking_Status;        
            this.Booked_By = Booked_By;
    }
        public int getBooking_ID(){
            return Booking_ID;
        }
        public String getExcursion_Name(){
            return Excursion_Name;
        }
        public String getPort_ID(){
            return Port_ID;
        }
        public String getBooked_Date(){
            return Booked_Date;
        }
        public int getNo_of_Seats(){
            return No_of_Seats;
        }
        public String getBooking_Status(){
            return Booking_Status;
        }
        public String getBooked_By(){
            return Booked_By;
        }
        
    }
}
